// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MyFeed {
  id           String   @id @default(uuid())
  userId       String @map("user_id")
  myFeedListId String @map("my_feed_list_id")
  feedId       String @map("feed_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  profile      Profile  @relation(fields: [userId], references: [id], onDelete: Cascade)
  myFeedList   MyFeedList  @relation(fields: [myFeedListId], references: [id], onDelete: Cascade)
  feed         Feed  @relation(fields: [feedId], references: [id], onDelete: Cascade)

  @@map("my_feeds")


}

model MyFeedList {
  id           String   @id @default(uuid())
  userId       String @map("user_id")
  title        String
  description  String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  myFeeds      MyFeed[]

  profile      Profile  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("my_feed_lists")

}

model Bookmark {
  id           String   @id @default(uuid())
  userId       String @map("user_id")
  platformId   String? @map("platform_id")
  articleId    String? @map("article_id")
  title        String
  description  String
  articleUrl   String @map("article_url")
  publishedAt  DateTime? @map("published_at")
  thumbnailURL String? @map("thumbnail_url")
  platformName String? @map("platform_name")
  platformUrl  String? @map("platform_url")
  platformFaviconUrl String? @map("platform_favicon_url")
  isEng        Boolean @default(false) @map("is_eng")
  isRead    Boolean @map("is_read")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  profile         Profile  @relation(fields: [userId], references: [id], onDelete: Cascade)
  platform        Platform?  @relation(fields: [platformId], references: [id], onDelete: Cascade)
  article      Article?  @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@map("bookmarks")

}


model Profile {
  id            String    @id @default(uuid())
  name          String
  email         String  
  emailVerifiedAt DateTime? @map("email_verified_at")
  image         String
  provider      String?
  isSuperAdmin  Boolean @default(false) @map("is_super_admin")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")
  bookmarks     Bookmark[]
  myFeedLists   MyFeedList[]
  myFeeds       MyFeed[]

  @@map("profiles")
}



model FeedArticleRelation {
  id           String   @id @default(uuid())
  feedId       String @map("feed_id")
  articleId    String @map("article_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  feed         Feed  @relation(fields: [feedId], references: [id], onDelete: Cascade)
  article      Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@map("feed_article_relations")

}

model Article {
  id           String   @id @default(uuid())
  platformId   String @map("platform_id")
  title        String
  description  String
  articleUrl   String @map("article_url")
  publishedAt  DateTime @map("published_at")
  thumbnailURL String @map("thumbnail_url")
  isPrivate    Boolean @map("is_private")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  feedArticleRelatoins FeedArticleRelation[]
  bookmarks      Bookmark[]

  platform     Platform  @relation(fields: [platformId], references: [id], onDelete: Cascade)
  @@map("articles")

}

model Feed {
  id           String   @id @default(uuid())
  name         String
  description  String
  thumbnailUrl String @map("thumbnail_url")
  platformId   String @map("platform_id")
  categoryId   String @map("category_id")
  siteUrl      String @map("site_url")
  rssUrl       String @map("rss_url")
  isTrending   Boolean @default(false) @map("is_trending")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")

  platform     Platform  @relation(fields: [platformId], references: [id], onDelete: Cascade)
  category     Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  myFeeds      MyFeed[]

  feedArticleRelatoins FeedArticleRelation[]

  @@map("feeds")
}


model Category {
  id           String   @id @default(uuid())
  name         String
  type         Int 
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  feeds        Feed[]

  @@map("categories")
}


model Platform {
  id           String   @id @default(uuid())
  name         String
  siteUrl      String @map("site_url")
  platformType Int @map("platform_type")
  faviconUrl   String @map("favicon_url")
  isEng        Boolean @default(false) @map("is_eng")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  feeds        Feed[]
  articles     Article[]
  bookmarks    Bookmark[]

  @@map("platforms")
}